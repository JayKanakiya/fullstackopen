{"ast":null,"code":"var _jsxFileName = \"/home/jay/Projects/fullstackopen/part1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // const Header = (props) => {\n//     return (\n//         <>\n//             <h1>{props.course}</h1>\n//         </>\n//     )\n// }\n// const Part= (props) => {\n//     return (\n//         <>\n//             <p>\n//                 {props.part}  {props.exercises}\n//             </p>\n//         </>\n//     )\n// }\n// const Content = (props) => {\n//     return (\n//         <>\n//             <Part part={props.part1} exercises={props.exercises1} />\n//             <Part part={props.part2} exercises={props.exercises2} />\n//             <Part part={props.part3} exercises={props.exercises3} />\n//         </>\n//     )\n// }\n// const Total = (props) => {\n//     return (\n//         <>\n//             <p>Number of exercises {props.exercises1+props.exercises2+props.exercises3}</p>\n//         </>\n//     )\n// }\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Content, {\n    part1: part1,\n    exercises1: exercises1,\n    part2: part2,\n    exercises2: exercises2,\n    part3: part3,\n    exercises3: exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Total, {\n    exercises1: exercises1,\n    exercises2: exercises2,\n    exercises3: exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["/home/jay/Projects/fullstackopen/part1/src/index.js"],"names":["React","ReactDOM","App","course","part1","name","exercises","part2","exercises2","part3","exercises3","exercises1","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE,uBADI;AAEVC,IAAAA,SAAS,EAAE;AAFD,GAAd;AAKA,QAAMC,KAAK,GAAG,0BAAd;AACA,QAAMC,UAAU,GAAE,CAAlB;AACA,QAAMC,KAAK,GAAG,sBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEP,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEC,KAAhB;AAAuB,IAAA,UAAU,EAAEO,UAAnC;AAA+C,IAAA,KAAK,EAAEJ,KAAtD;AAA6D,IAAA,UAAU,EAAEC,UAAzE;AAAqF,IAAA,KAAK,EAAEC,KAA5F;AAAmG,IAAA,UAAU,EAAEC,UAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEC,UAAnB;AAA+B,IAAA,UAAU,EAAEH,UAA3C;AAAuD,IAAA,UAAU,EAAEE,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAnBD;;AAqBAT,QAAQ,CAACW,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// const Header = (props) => {\n//     return (\n//         <>\n//             <h1>{props.course}</h1>\n//         </>\n//     )\n// }\n// const Part= (props) => {\n//     return (\n//         <>\n//             <p>\n//                 {props.part}  {props.exercises}\n//             </p>\n//         </>\n//     )\n// }\n// const Content = (props) => {\n//     return (\n//         <>\n//             <Part part={props.part1} exercises={props.exercises1} />\n//             <Part part={props.part2} exercises={props.exercises2} />\n//             <Part part={props.part3} exercises={props.exercises3} />\n//         </>\n//     )\n// }\n\n// const Total = (props) => {\n//     return (\n//         <>\n//             <p>Number of exercises {props.exercises1+props.exercises2+props.exercises3}</p>\n//         </>\n//     )\n// }\nconst App = () => {\n    const course = 'Half Stack application development'\n    const part1 = {\n        name: 'Fundamentals of React',\n        exercises: 10\n    }\n    \n    const part2 = 'Using props to pass data'\n    const exercises2= 7\n    const part3 = 'State of a component'\n    const exercises3 = 14\n    \n    return (\n        <div>\n            <Header course={course}/>\n            <Content part1={part1} exercises1={exercises1} part2={part2} exercises2={exercises2} part3={part3} exercises3={exercises3} />\n            <Total exercises1={exercises1} exercises2={exercises2} exercises3={exercises3} />\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"]},"metadata":{},"sourceType":"module"}